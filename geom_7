#include <iostream>     //Задача 7
#include <locale>
#include <cstdlib>
#include <cmath>
using namespace std;
double DlinaStorona(int x1, int y1, int x2, int y2) {
    double n = 0;
    n = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    return n;
}
int Orientetion(int x1, int x2, int x3, int y1, int y2, int y3) {
    int det;
    det = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);
    return det;
}

int main()
{
    setlocale(LC_ALL, "Russian");

    int** arr;
    int k = 0;
    cout << "Введите кол-во вершин многоугольника: ";
    cin >> k;
    if (k < 3) {
        cout << "Неверный ввод данных! Многоугольник - это фигура, у которой больше 2 вершин ";
    }
    else {
        arr = new int* [k];
        for (int i = 0; i < k; i++) {
            arr[i] = new int[2];
        }
        for (int i = 0; i < k; ++i) {
            for (int j = 0; j < 2; ++j) {
                if (j == 0) {
                    cout << "Введите x для " << i + 1 << " вершины: ";
                    cin >> arr[i][j];
                }
                if (j == 1) {
                    cout << "Введите y для " << i + 1 << " вершины: ";
                    cin >> arr[i][j];
                }
            }
        }

        int x1, y1, x2, y2;
        cout << "Введите координаты точки, у которой мы определяем, где она находится относительно многоугольника" << endl;
        cout << "Введите х: ";
        cin >> x1;
        cout << "Введите y: ";
        cin >> y1;
        x2 = 100 * x1;
        y2 = 100 * y1;
        int s = 0;
        for (int i = 0; i < k - 1; i++) {
            int s1 = Orientetion(arr[i][0], arr[i + 1][0], x1, arr[i][1], arr[i + 1][1], y1);
            int s2 = Orientetion(arr[i][0], arr[i + 1][0], x2, arr[i][1], arr[i + 1][1], y2);
            if (s1 != s2 and s1 != 0 and s2 != 0) {
                s++;
            }
            else if ((s1 != s2 and s1 == 0) or (s1 != s2 and s2 == 0)) {
                s++;
            }
        }
        cout << s << endl;
        if (s % 2 != 0) {
            cout << "Точка лежит внутри многоугольника" << endl;
        }
        else {
            cout << "Точка не лежит внутри многоугольника" << endl;
        }
    }
    return 0;
}
